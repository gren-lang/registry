module Test.E2E.Helper exposing
    ( expectBadStatus
    , get
    , post
    )


import Expect exposing (Expectation)
import HttpClient exposing (Response)
import Task exposing (Task)


get : HttpClient.Permission -> String -> Task (HttpClient.Error {}) (HttpClient.Response {})
get httpPerm path =
    HttpClient.get ("http://localhost:3000" ++ path)
        |> HttpClient.expectAnything
        |> HttpClient.send httpPerm


post : HttpClient.Permission -> String -> Task (HttpClient.Error {}) (HttpClient.Response {})
post httpPerm path =
    HttpClient.post ("http://localhost:3000" ++ path)
        |> HttpClient.expectAnything
        |> HttpClient.send httpPerm


expectBadStatus : Int -> HttpClient.Error a -> Expectation
expectBadStatus status error =
    when error is
        HttpClient.BadStatus r ->
            Expect.equal status r.statusCode
        _ ->
            Expect.fail <|
                "Expected HttpClient.BadStatus, Got: " ++
                (Debug.toString error)
