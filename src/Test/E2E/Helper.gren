module Test.E2E.Helper exposing
    ( expectBadStatus
    , expectJson
    , initDb
    , get
    , post
    , postWithJson
    )


import Bytes exposing (Bytes)
import Db
import Email
import Expect exposing (Expectation)
import HttpClient exposing (Response)
import Json.Decode
import Json.Encode
import Task exposing (Task)
import User


url : String -> String
url path =
    "http://localhost:3000" ++ path


initDb : HttpClient.Permission -> Db.Connection
initDb httpPerm =
    -- TODO: get db url from env
    Db.init httpPerm "http://localhost:12321/local"


get : HttpClient.Permission -> String -> Task HttpClient.Error (HttpClient.Response {})
get httpPerm path =
    url path
        |> HttpClient.get
        |> HttpClient.expectAnything
        |> HttpClient.send httpPerm


post : HttpClient.Permission -> String -> Task HttpClient.Error (HttpClient.Response {})
post httpPerm path =
    url path
        |> HttpClient.post
        |> HttpClient.expectAnything
        |> HttpClient.send httpPerm


postWithJson : HttpClient.Permission -> String -> Json.Encode.Value -> Task HttpClient.Error (HttpClient.Response Bytes)
postWithJson httpPerm path json =
    url path
        |> HttpClient.post
        |> HttpClient.expectBytes
        |> HttpClient.withJsonBody json
        |> HttpClient.send httpPerm


expectBadStatus : Int -> HttpClient.Error -> Expectation
expectBadStatus status error =
    when error is
        HttpClient.BadStatus r ->
            Expect.equal status r.statusCode
        _ ->
            Expect.fail <|
                "Expected HttpClient.BadStatus, Got: " ++
                (Debug.toString error)


expectJson : Json.Decode.Decoder a -> a -> Bytes -> Expectation
expectJson decoder expected bytes =
    when Bytes.toString bytes is
        Nothing ->
            Expect.fail "Failed to decode bytes"

        Just json ->
            when Json.Decode.decodeString decoder json is
                Ok value ->
                    Expect.equal expected value

                Err error ->
                    Expect.fail (Json.Decode.errorToString error)
